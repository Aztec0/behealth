---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/doctors":
    get:
      summary: list doctors
      tags:
      - Doctors
      responses:
        '200':
          description: successful
  "/api/v1/head_doctors":
    get:
      summary: Retrieves a list of doctors associated with the head doctor
      tags:
      - Head Doctors
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: returns a list of doctors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    surname:
                      type: string
                    email:
                      type: string
                    phone:
                      type: integer
                    birthday:
                      type: string
                    position:
                      type: string
                    rating:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    head_doctor_id:
                      type: integer
                    hospital_id:
                      type: integer
                  required:
                  - id
                  - name
                  - surname
                  - email
                  - phone
                  - birthday
                  - position
                  - rating
                  - created_at
                  - updated_at
                  - head_doctor_id
                  - hospital_id
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/head_doctors/create_doctor":
    post:
      summary: Creates a doctor
      tags:
      - Head Doctors
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '201':
          description: returns the newly created doctor
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
                phone:
                  type: integer
                birthday:
                  type: string
                position:
                  type: string
                hospital_id:
                  type: integer
              required:
              - name
              - surname
              - email
              - phone
              - birthday
              - position
              - hospital_id
              - password
              - password_confirmation
  "/api/v1/head_doctors/create_hospital":
    post:
      summary: Creates a hospital
      tags:
      - Head Doctors
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '201':
          description: returns the newly created hospital
        '422':
          description: returns an error message if hospital cannot be created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                city:
                  type: string
                region:
                  type: string
              required:
              - name
              - address
              - city
              - region
  "/api/v1/head_doctors/{id}/delete_doctor":
    delete:
      summary: Deletes a doctor by id
      tags:
      - Head Doctors
      security:
      - ApiKeyAuth: []
      parameters:
      - name: id
        in: path
        description: Doctor ID
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: doctor deleted
        '404':
          description: doctor not found
  "/api/v1/forgot":
    post:
      summary: Sends an email to reset the user's password
      tags:
      - Passwords
      parameters: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                user_type:
                  type: string
              required:
              - email
              - user_type
        description: The user's email address
  "/api/v1/reset":
    post:
      summary: Resets the user's password
      tags:
      - Passwords
      parameters:
      - name: token
        in: query
        description: The password reset token generated for the user
        required: true
        schema:
          type: string
      - name: user_type
        in: query
        description: The user's type
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
              required:
              - password
        description: The new password for the user
  "/api/v1/signup":
    post:
      summary: Sends an email to register user
      tags:
      - Signup
      parameters: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
        description: The user's email and password
  "/api/v1/confirmation":
    post:
      summary: Confirmation user's email and input other data
      tags:
      - Signup
      parameters:
      - name: token
        in: query
        description: The confirm reset token generated for the patient
        required: true
        schema:
          type: string
      responses:
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                birthday:
                  type: string
                  format: datetime
                name:
                  type: string
                surname:
                  type: string
                phone:
                  type: string
                  format: bigint
              required:
              - birthday
              - name
              - surname
              - phone
        description: Patient data
  "/api/v1/login":
    post:
      summary: create session
      tags:
      - Login
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                user_type:
                  type: string
              required:
              - email
              - password
              - user_type
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
- url: http://{staging_host}
  variables:
    staging_host:
      default: ''
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header
      description: "{token}"
