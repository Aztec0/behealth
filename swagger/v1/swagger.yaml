---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/patient-account/additional-data":
    get:
      summary: list additional_infos
      tags:
      - Additional Information
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
    post:
      summary: create additional_info
      tags:
      - Additional Information
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: Must be 'address' or 'work'
                address_type:
                  type: string
                  default: Основна
                settlement:
                  type: string
                  default: Черкаси
                house:
                  type: string
                  default: '1'
                apartments:
                  type: string
                  default: '1'
                work_type:
                  type: string
                  default: Основна
                place:
                  type: string
                  default: GeekHub
                position:
                  type: string
                  default: Студент
    put:
      summary: update additional_info
      tags:
      - Additional Information
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: Must be 'address' or 'work'
                address_type:
                  type: string
                  default: Основна
                settlement:
                  type: string
                  default: Черкаси
                house:
                  type: string
                  default: '1'
                apartments:
                  type: string
                  default: '1'
                work_type:
                  type: string
                  default: Основна
                place:
                  type: string
                  default: GeekHub
                position:
                  type: string
                  default: Студент
    delete:
      summary: delete additional_info
      tags:
      - Additional Information
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: Must be 'address' or 'work'
  "/api/v1/doctor/edit/:id":
    patch:
      summary: Update doctors params
      tags:
      - Doctors cabinet
      security:
      - ApiKeyAuth: []
      parameters:
      - name: tag_list
        in: query
        description: List of tags for doctor
        schema:
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                second_email:
                  type: string
                  default: "@gmail.com"
                second_phone:
                  type: integer
                  default: '123456789'
                about:
                  type: string
                  default: Something about yourself
                admission_price:
                  type: integer
                  default: '100'
              required:
              - second_email
              - second_phone
              - description
              - price
        description: Doctors params to update
  "/api/v1/doctor/main-info":
    get:
      summary: Returns personal information about the doctor
      tags:
      - Doctors cabinet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: returns personal information
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    full_name:
                      type: string
                    email:
                      type: string
                    second_email:
                      type: string
                    phone:
                      type: integer
                    second_phone:
                      type: integer
                    about:
                      type: string
                  required:
                  - full_name
                  - email
                  - second_email
                  - second_phone
                  - description
        '422':
          description: Unprocessable_entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/doctor/extra-info":
    get:
      summary: Returns professional information about the doctor
      tags:
      - Doctors cabinet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: returns professional information
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    admission_price:
                      type: integer
                    position:
                      type: string
                    hospital_city:
                      type: string
                    hospital_region:
                      type: string
                    hospital_address:
                      type: string
                    hospital_name:
                      type: string
                  required:
                  - price
                  - position
                  - hospital_city
                  - hospital_region
                  - hospital_address
                  - hospital_name
  "/api/v1/doctors":
    get:
      summary: List all doctors
      tags:
      - Doctors and Hospitals
      responses:
        '200':
          description: successful
  "/api/v1/create_doctor":
    post:
      summary: Creates a doctor
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '201':
          description: returns the newly created doctor
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  default: John
                last_name:
                  type: string
                  default: Doe
                second_name:
                  type: string
                  default: Doe
                email:
                  type: string
                  default: john.doe@example.com
                phone:
                  type: integer
                  default: '1234567890'
                birthday:
                  type: string
                  default: '1990-01-01'
                position:
                  type: string
                  default: Cardiologist
              required:
              - first_name
              - last_name
              - second_name
              - email
              - phone
              - birthday
              - position
  "/api/v1/create_hospital":
    post:
      summary: Creates a hospital
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '201':
          description: returns the newly created hospital
        '422':
          description: returns an error message if hospital cannot be created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  default: New Hospital
                address:
                  type: string
                  default: 123 Main St
                city:
                  type: string
                  default: Anytown
                region:
                  type: string
                  default: NY
              required:
              - name
              - address
              - city
              - region
  "/api/v1/delete_doctor/{id}":
    delete:
      summary: Deletes a doctor by id
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      parameters:
      - name: id
        in: path
        description: Doctor ID
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: doctor deleted
        '404':
          description: doctor not found
  "/api/v1/list_doctor_by_hospital":
    get:
      summary: Retrieves a list of doctors associated with the hospital
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: returns a list of doctors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                    second_name:
                      type: string
                    email:
                      type: string
                    phone:
                      type: integer
                    birthday:
                      type: string
                    position:
                      type: string
                    rating:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    hospital_id:
                      type: integer
                  required:
                  - id
                  - first_name
                  - last_name
                  - second_name
                  - email
                  - phone
                  - birthday
                  - position
                  - rating
                  - created_at
                  - updated_at
                  - hospital_id
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/staff_appointments":
    get:
      summary: Retrieves a list of doctors appointments
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: returns a list of doctors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    appointment_datetime:
                      type: string
                    status:
                      type: string
                    doctor_full_name:
                      type: string
                    hospital_name:
                      type: string
                    patient_full_name:
                      type: string
                  required:
                  - id
                  - appointment_datetime
                  - status
                  - doctor_full_name
                  - hospital_name
                  - patient_full_name
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/feedbacks/{type}/{id}":
    parameters:
    - name: type
      in: path
      description: type
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list feedbacks
      tags:
      - Feedbacks
      responses:
        '200':
          description: successful
    post:
      summary: create feedback
      tags:
      - Feedbacks
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  default: Test
                body:
                  type: string
                  default: It's just a test feedback
                rating:
                  type: integer
                  default: 5
  "/api/v1/feedbacks/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: update feedback
      tags:
      - Feedbacks
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  default: Test
                body:
                  type: string
                  default: It's just a test feedback
                rating:
                  type: integer
                  default: 5
    delete:
      summary: delete feedback
      tags:
      - Feedbacks
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: OK

  "/api/v1/appointments":
    get:
      summary: List all hospitals
      tags:
        - "Appointments"
      summary: "List all appointments"
      parameters:
        - name: "upcoming"
          in: "query"
          description: "List only upcoming appointments"
          required: false
          type: "boolean"
        - name: "past"
          in: "query"
          description: "List only past appointments"
          required: false
          type: "boolean"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                appointment_datetime:
                  type: "string"
                status:
                  type: "string"
                  enum:
                    - "cancelled"
                    - "completed"
                    - "planned"
                    - "unconfirmed"
                doctor_id:
                  type: "integer"
                patient_id:
                  type: "integer"
              required:
                - "id"
                - "appointment_datetime"
                - "status"
                - "doctor_id"
                - "patient_id"
        "401":
          description: "Unauthorized"
      - Doctors and Hospitals
      responses:
        '200':
          description: successful
  "/api/v1/hospital/update/:id":
    patch:
      summary: Update hospital params
      tags:
      - Doctors
      security:
        - ApiKeyAuth: [ ]
  "/api/v1/appointments":
      post:
        summary: Create a new appointment
        tags:
          - Appointments
        requestBody:
          description: Appointment details
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointment_datetime:
                    type: string
                    format: date-time
                    description: The date and time of the appointment in ISO 8601 format
                    example: "2023-06-01T10:00:00Z"
                  status:
                    type: integer
                    enum: [ 0, 1, 2, 3 ]
                    default: 3
                    description: The status of the appointment (0 = canceled, 1 = pending, 2 = confirmed, 3 = unknown)
                  doctor_id:
                    type: integer
                    description: The ID of the doctor who will be conducting the appointment
                  patient_id:
                    type: integer
                    description: The ID of the patient who will be attending the appointment
                required:
                  - appointment_datetime
                  - doctor_id
                  - patient_id
        responses:
          '201':
            description: The appointment was created successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The ID of the created appointment
                    appointment_datetime:
                      type: string
                      format: date-time
                      description: The date and time of the appointment in ISO 8601 format
                      example: "2023-06-01T10:00:00Z"
                    status:
                      type: integer
                      enum: [ 0, 1, 2, 3 ]
                      description: The status of the appointment (0 = canceled, 1 = pending, 2 = confirmed, 3 = unknown)
                    doctor_id:
                      type: integer
                      description: The ID of the doctor who will be conducting the appointment
                    patient_id:
                      type: integer
                      description: The ID of the patient who will be attending the appointment
                  required:
                    - id
                    - appointment_datetime
                    - status
                    - doctor_id
                    - patient_id
          '422':
            description: Invalid request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      description: The error message describing why the request was invalid
                  required:
                    - message
          '401':
            description: Unauthorized
  "/api/v1/appointments/{id}":
    parameters:
      - name: id
        in: path
        type: integer
        required: true
        description: Appointment ID
    get:
      summary: Get an appointment
      tags:
        - Appointments
      produces:
        - application/json
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  appointment_datetime:
                    type: string
                  status:
                    type: string
                  doctor_id:
                    type: integer
                  patient_id:
                    type: integer
                required:
                  - id
                  - appointment_datetime
                  - status
                  - doctor_id
                  - patient_id
          examples:
            appointment:
              id: 1
              appointment_datetime: '2023-05-05T09:00:00Z'
              status: 'uncondirmed'
              doctor_id: 2
              patient_id: 3
      security:
        - ApiKeyAuth: [ ]
      responses:
        '401':
          description: Unauthorized
        '404':
          description: Not found
    put:
      summary: Update an appointment
      tags:
        - Appointments
      produces:
        - application/json
      security:
        - ApiKeyAuth: [ ]
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  appointment_datetime:
                    type: string
                  status:
                    type: string
                  doctor_id:
                    type: integer
                  patient_id:
                    type: integer
                required:
                  - id
                  - appointment_datetime
                  - status
                  - doctor_id
                  - patient_id
          examples:
            appointment:
              id: 1
              appointment_datetime: '2023-05-05T09:00:00Z'
              status: 'confirmed'
              doctor_id: 2
              patient_id: 3
        '401':
          description: Unauthorized
        '404':
          description: Not found
  /api/v1/appointments/{id}/accept:
    parameters:
      - name: id
        in: path
        type: integer
        required: true
        description: Appointment ID
    put:
      summary: Accept appointment
      tags:
        - Appointments
      produces:
        - application/json
      - ApiKeyAuth: []
      parameters:
      - name: tag_list
        in: query
        description: List of tags for hospital
        schema:
          type: string
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  default: Some addres
                city:
                  type: string
                  default: Some city
                name:
                  type: string
                  default: Some name
                region:
                  type: string
                  default: Some region
              required:
              - second_email
              - second_phone
              - description
              - price
        description: Hospital`s params to update
  "/api/v1/forgot":
    post:
      summary: Sends an email to reset the user's password
      tags:
      - Passwords
      parameters: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                user_type:
                  type: string
              required:
              - email
              - user_type
        description: The user's email address
  "/api/v1/password-reset":
    post:
      summary: Resets the user's password
      tags:
      - Passwords
      parameters:
      - name: token
        in: query
        description: The password reset token generated for the user
        required: true
        schema:
          type: string
      - name: user_type
        in: query
        description: The user's type
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
              required:
              - password
        description: The new password for the user
  "/api/v1/patient-account/personal-information":
    get:
      summary: list personal_infos
      tags:
      - Personal Information
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
    post:
      summary: create personal_info
      tags:
      - Personal Information
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                document_type:
                  type: string
                  default: Must be 'Passport' or 'IdCard'
                series:
                  type: string
                  default: Dont use for IdCard
                number:
                  type: string
                  default: '1111'
                issued_by:
                  type: string
                  default: '1111'
                date:
                  type: string
                  default: 12.04.2023
    put:
      summary: update personal_info
      tags:
      - Personal Information
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: Must be 'patient_info' or 'document'
                first_name:
                  type: string
                  default: Юзер
                last_name:
                  type: string
                  default: Юзеренко
                second_name:
                  type: string
                  default: Юзеренкович
                email:
                  type: string
                  default: user@test.rb
                phone:
                  type: string
                  default: "+380000000000"
                birthday:
                  type: string
                  default: 05.11.2003
                tin:
                  type: string
                  default: '1111111111'
                sex:
                  type: string
                  default: "'nothing', 'male' or 'female'"
                series:
                  type: string
                  default: Use for Passport
                number:
                  type: string
                  default: '1111'
                issued_by:
                  type: string
                  default: '1111'
                date:
                  type: string
                  default: 12.04.2023
    delete:
      summary: delete personal_info
      tags:
      - Personal Information
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
  "/api/v1/signup":
    post:
      summary: Sends an email to register user
      tags:
      - Signup
      parameters: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
        description: The user's email and password
  "/api/v1/confirmation":
    post:
      summary: Confirmation user's email and input other data
      tags:
      - Signup
      parameters:
      - name: token
        in: query
        description: The confirm reset token generated for the patient
        required: true
        schema:
          type: string
      responses:
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                birthday:
                  type: string
                  format: datetime
                first_name:
                  type: string
                second_name:
                  type: string
                last_name:
                  type: string
                phone:
                  type: string
                  format: bigint
              required:
              - birthday
              - first_name
              - second_name
              - last_name
              - phone
        description: Patient data
  "/api/v1/search":
    get:
      summary: Search for a hospital or doctor in the region
              type: object
              properties:
                appointment:
                  type: object
                  properties:
                    status:
                      type: string
                      enum: [ "accepted" ]
                      description: Status to update the appointment to
                  required:
                    - status
            required:
              - appointment
        description: Appointment object containing the status field to update
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  appointment_datetime:
                    type: string
                  status:
                    type: string
                  doctor_id:
                    type: integer
                  patient_id:
                    type: integer
                required:
                  - id
                  - appointment_datetime
                  - status
                  - doctor_id
                  - patient_id
          examples:
            appointment:
              id: 1
              appointment_datetime: '2023-05-05T09:00:00Z'
              status: 'accepted'
              doctor_id: 2
              patient_id: 3
      security:
        - ApiKeyAuth: [ ]
      responses:
        '401':
          description: Unauthorized
        '404':
          description: Not found
  /api/v1/appointments/{id}/cancel:
    parameters:
      - name: id
        in: path
        type: integer
        required: true
        description: Appointment ID
    put:
      summary: Cancel an appointment
      tags:
        - Appointments
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cancellation_reason:
                  type: string
                comments:
                  type: string
              required:
                - cancellation_reason
        description: Appointment cancellation information
      security:
        - ApiKeyAuth: [ ]
      responses:
        '204':
          description: No content
        '401':
          description: Unauthorized
        '404':
          description: Not found

  "/api/v1/conclusions":
    get:
      summary: List of all conclusions
      tags:
        - Conclusions
      security:
        - ApiKeyAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    patient_id:
                      type: integer
                    doctor_id:
                      type: integer
                    content:
                      type: string
                    created_at:
                      type: string
                  required:
                    - id
                    - patient_id
                    - doctor_id
                    - content
                    - created_at
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
        summary: Create a new conclusion
        tags:
          - Conclusions
        security:
          - ApiKeyAuth: [ ]
        parameters: [ ]
        responses:
          '201':
            description: Created
          '400':
            description: Bad Request
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Internal Server Error
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  patient_id:
                    type: integer
                    description: ID of the patient
                  doctor_id:
                    type: integer
                    description: ID of the doctor
                  text:
                    type: string
                    description: Text of the conclusion
                required:
                  - patient_id
                  - doctor_id
                  - text
          description: Parameters to create a new conclusion
  "/api/v1/conclusions/{id}":
      get:
        summary: Get a conclusion by ID
        tags:
          - Conclusions
        security:
          - ApiKeyAuth: [ ]
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
              format: int64
              example: 123
            description: The ID of the conclusion to get
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 123
                      description: The ID of the conclusion
                    patient_id:
                      type: integer
                      format: int64
                      example: 456
                      description: The ID of the patient
                    doctor_id:
                      type: integer
                      format: int64
                      example: 789
                      description: The ID of the doctor
                    diagnosis:
                      type: string
                      example: "Headache"
                      description: The diagnosis for the patient
                    notes:
                      type: string
                      example: "Patient needs rest and hydration"
                      description: Additional notes about the diagnosis
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: "Conclusion not found"
                      description: The error message
                  required:
                    - error
  "/api/v1/conclusions/{id}":
        put:
          summary: Update a conclusion
          tags:
            - Conclusions
          parameters:
            - in: path
              name: id
              required: true
              description: ID of the conclusion to update
              schema:
                type: integer
            - in: header
              name: Authorization
              description: Access token
              required: true
              schema:
                type: string
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    content:
                      type: string
                      description: Content of the conclusion
                  required:
                    - content
          responses:
            '200':
              description: OK
            '400':
              description: Bad request
            '401':
              description: Unauthorized
            '404':
              description: Conclusion not found

  "/api/v1/calendar":
    get:
      summary: Get appointments for current user
      tags:
        - Calendar
      security:
        - ApiKeyAuth: [ ]
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                title:
                  type: string
                start_time:
                  type: string
                  format: date-time
                end_time:
                  type: string
                  format: date-time
                id:
                  type: integer
                status:
                  type: string
    post:
      summary: Create a new appointment
      tags:
        - Calendar
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - in: body
          name: appointment
          schema:
            type: object
            properties:
              appointment_datetime:
                type: string
                format: date-time
              doctor_id:
                type: integer
              patient_id:
                type: integer
            required:
              - appointment_datetime
              - doctor_id
              - patient_id
      responses:
        '201':
          description: Created
          schema:
            type: object
            properties:
              message:
                type: string
              id:
                type: integer
        '422':
          description: Unprocessable_entity
          schema:
            type: object
            properties:
              error:
                type: string
            required:
              - error
    put:
      summary: Update an existing appointment
      tags:
      - Search
        - Calendar
      security:
        - ApiKeyAuth: [ ]
      parameters:
      - name: query
        in: query
        description: |-
          Searching query for hospital or doctor. Input address, name, city for hospital or
                                        First Name, Last Name, specialty(position) for doctor
        required: false
        schema:
          type: string
      - name: region
        in: query
        description: |-
          Region filter. Enter the name of the region to search for a hospital or doctor in that
                                        location. If field leave empty, request was for all areas
        required: false
        schema:
          type: string
        - in: path
          name: id
          type: integer
          required: true
        - in: body
          name: appointment
          schema:
            type: object
            properties:
              appointment_datetime:
                type: string
                format: date-time
              doctor_id:
                type: integer
              patient_id:
                type: integer
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '422':
          description: Unprocessable_entity
          schema:
            type: object
            properties:
              error:
                type: string
            required:
              - error
  "/api/v1/calendar/{id}":
      delete:
        summary: Delete an appointment
        tags:
          - Calendar
        security:
          - ApiKeyAuth: [ ]
        parameters:
          - in: path
            name: id
            type: integer
            required: true
        responses:
          '204':
            description: No Content
          '404':
            description: Not Found

  /api/v1/chats:
    get:
      summary: Returns chats for the authenticated user
      tags:
        - Chats
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Returns a list of chats
          schema:
            type: array
            items:
              $ref: '#/definitions/Chat'
        '401':
          description: Unauthorized
    post:
      summary: Creates a new chat
      tags:
        - Chats
      security:
        - ApiKeyAuth: []
      parameters:
        - in: body
          name: chat
          schema:
            type: object
            properties:
              doctor_id:
                type: integer
              patient_id:
                type: integer
            required:
              - doctor_id
              - patient_id
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Chat'
        '422':
          description: Unprocessable Entity
          schema:
            type: object
            properties:
              errors:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
      '401':
        description: Unauthorized
  /api/v1/chats/{id}:
      parameters:
        - in: path
          name: id
          description: ID of the chat
          required: true
          type: integer
      get:
        summary: Returns the chat with the specified ID
        tags:
          - Chats
        security:
          - ApiKeyAuth: []
        responses:
          '200':
            description: Returns the chat
            schema:
              $ref: '#/definitions/Chat'
          '404':
            description: Not Found
      patch:
        summary: Updates the chat with the specified ID
        tags:
          - Chats
        security:
          - ApiKeyAuth: []
        parameters:
          - in: body
            name: chat
            schema:
              $ref: '#/definitions/Chat'
          - in: path
            name: id
            description: ID of the chat
            required: true
            type: integer
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/Chat'
          '404':
            description: Not Found
          '422':
            description: Unprocessable Entity
            schema:
              type: object
              properties:
                errors:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: string
        '401':
          description: Unauthorized
      delete:
        summary: Deletes the chat with the specified ID
        tags:
          - Chats
        security:
          - ApiKeyAuth: []
        responses:
          '204':
            description: No Content
          '404':
            description: Not Found
          '401':
            description: Unauthorized

  /api/v1/chats/{chat_id}/messages:
    get:
      summary: Get all messages for a chat
      tags:
        - Messages
      parameters:
        - name: chat_id
          in: path
          description: ID of the chat to retrieve messages for
          required: true
          type: integer
        - name: Authorization
          in: header
          description: JWT token for authorization
          required: true
          type: string
          description: Hospitals and doctors found
          content:
            application/json:
              schema:
                type: object
                properties:
                  hospitals:
                    type: array
                  doctors:
                    type: array
        '422':
          description: Invalid search query
  "/api/v1/search_doctors_by_specialty":
    get:
      summary: Searching doctors by specialty
      tags:
      - Search
      parameters:
      - name: query
        in: query
        description: 'Searching doctor by first_name, last_name, position '
        required: false
        schema:
          type: string
      - name: position
        in: query
        description: Doctor speciality
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Doctors found
          content:
            application/json:
              schema:
                type: object
                properties:
                  doctors:
                    type: array
        '422':
          description: Invalid search query
  "/api/v1/search_hospitals":
    get:
      summary: Searching hospitals
      tags:
      - Search
      parameters:
      - name: query
        in: query
        description: Searching hospital by name. If field leave empty request was
          for all hospitals
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        '401':
          $ref: '#/responses/Unauthorized'

    post:
      summary: Create a new message in a chat
      tags:
        - Messages
      parameters:
        - name: chat_id
          in: path
          description: ID of the chat to create a message in
          required: true
          type: integer
        - name: Authorization
          in: header
          description: JWT token for authorization
          required: true
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/MessageInput'
      responses:
        '201':
          description: Message created successfully
          schema:
            $ref: '#/definitions/Message'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'

  /api/v1/chats/{chat_id}/messages/{id}:
    patch:
      summary: Update a message in a chat
      tags:
        - Messages
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - in: path
          name: chat_id
          description: ID of the chat
          required: true
          schema:
            type: integer
        - in: path
          name: id
          description: ID of the message
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated message object
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
                  properties:
                    content:
                      type: string
                  required:
                    - content
      responses:
        '200':
          description: Hospitals found
          content:
            application/json:
              schema:
                type: object
                properties:
                  hospitals:
                    type: array
        '422':
          description: Invalid search query
                type: object
                properties:
                  id:
                    type: integer
                  chat_id:
                    type: integer
                  user_id:
                    type: integer
                  content:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                  - id
                  - chat_id
                  - user_id
                  - content
                  - created_at
                  - updated_at
        '400':
          description: Bad Request
        '404':
          description: Not Found

    delete:
      summary: Delete a message in a chat
      tags:
        - Messages
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - in: path
          name: chat_id
          description: ID of the chat
          required: true
          schema:
            type: integer
        - in: path
          name: id
          description: ID of the message
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  "/api/v1/login":
    post:
      summary: create session
      tags:
      - Login
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                user_type:
                  type: string
              required:
              - email
              - password
              - user_type
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
- url: https://{staging_host}
  variables:
    staging_host:
      default: www.behealth.pp.ua
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header
      description: "{token}"
