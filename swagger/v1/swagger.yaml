---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/patient-account/additional-data":
    get:
      summary: list additional_infos
      tags:
      - Additional Information
      responses:
        '200':
          description: successful
    post:
      summary: create additional_info
      tags:
      - Additional Information
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: Must be 'address' or 'work'
                address_type:
                  type: string
                  default: Основна
                settlement:
                  type: string
                  default: Черкаси
                house:
                  type: string
                  default: '1'
                apartments:
                  type: string
                  default: '1'
                work_type:
                  type: string
                  default: Основна
                place:
                  type: string
                  default: GeekHub
                position:
                  type: string
                  default: Студент
    put:
      summary: update additional_info
      tags:
      - Additional Information
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: Must be 'address' or 'work'
                address_type:
                  type: string
                  default: Основна
                settlement:
                  type: string
                  default: Черкаси
                house:
                  type: string
                  default: '1'
                apartments:
                  type: string
                  default: '1'
                work_type:
                  type: string
                  default: Основна
                place:
                  type: string
                  default: GeekHub
                position:
                  type: string
                  default: Студент
    delete:
      summary: delete additional_info
      tags:
      - Additional Information
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: Must be 'address' or 'work'
  "/api/v1/doctor/edit/:id":
    patch:
      summary: Update doctors params
      tags:
      - Doctors cabinet
      security:
      - ApiKeyAuth: []
      parameters:
      - name: tag_list
        in: query
        description: List of tags for doctor
        schema:
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                second_email:
                  type: string
                  default: "@gmail.com"
                second_phone:
                  type: integer
                  default: '123456789'
                about:
                  type: string
                  default: Something about yourself
                admission_price:
                  type: integer
                  default: '100'
              required:
              - second_email
              - second_phone
              - description
              - price
        description: Doctors params to update
  "/api/v1/doctor/main-info":
    get:
      summary: Returns personal information about the doctor
      tags:
      - Doctors cabinet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: returns personal information
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    full_name:
                      type: string
                    email:
                      type: string
                    second_email:
                      type: string
                    phone:
                      type: integer
                    second_phone:
                      type: integer
                    about:
                      type: string
                  required:
                  - full_name
                  - email
                  - second_email
                  - second_phone
                  - description
        '422':
          description: Unprocessable_entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/doctor/extra-info":
    get:
      summary: Returns professional information about the doctor
      tags:
      - Doctors cabinet
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: returns professional information
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    admission_price:
                      type: integer
                    position:
                      type: string
                    hospital_city:
                      type: string
                    hospital_region:
                      type: string
                    hospital_address:
                      type: string
                    hospital_name:
                      type: string
                  required:
                  - price
                  - position
                  - hospital_city
                  - hospital_region
                  - hospital_address
                  - hospital_name
  "/api/v1/doctors":
    get:
      summary: List all doctors
      tags:
      - Doctors and Hospitals
      responses:
        '200':
          description: successful
  "/api/v1/create_doctor":
    post:
      summary: Creates a doctor
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '201':
          description: returns the newly created doctor
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  default: John
                surname:
                  type: string
                  default: Doe
                second_name:
                  type: string
                  default: Doe
                email:
                  type: string
                  default: john.doe@example.com
                phone:
                  type: integer
                  default: '1234567890'
                birthday:
                  type: string
                  default: '1990-01-01'
                position:
                  type: string
                  default: Cardiologist
              required:
              - name
              - surname
              - second_name
              - email
              - phone
              - birthday
              - position
  "/api/v1/create_hospital":
    post:
      summary: Creates a hospital
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '201':
          description: returns the newly created hospital
        '422':
          description: returns an error message if hospital cannot be created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  default: New Hospital
                address:
                  type: string
                  default: 123 Main St
                city:
                  type: string
                  default: Anytown
                region:
                  type: string
                  default: NY
              required:
              - name
              - address
              - city
              - region
  "/api/v1/doctors/{id}":
    delete:
      summary: Deletes a doctor by id
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      parameters:
      - name: id
        in: path
        description: Doctor ID
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: doctor deleted
        '404':
          description: doctor not found
  "/api/v1/list_doctor_by_hospital":
    get:
      summary: Retrieves a list of doctors associated with the hospital
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: returns a list of doctors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    surname:
                      type: string
                    email:
                      type: string
                    phone:
                      type: integer
                    birthday:
                      type: string
                    position:
                      type: string
                    rating:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    hospital_id:
                      type: integer
                  required:
                  - id
                  - name
                  - surname
                  - email
                  - phone
                  - birthday
                  - position
                  - rating
                  - created_at
                  - updated_at
                  - hospital_id
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/staff_appointments":
    get:
      summary: Retrieves a list of doctors appointments
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: returns a list of doctors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    appointment_datetime:
                      type: string
                    status:
                      type: string
                    doctor_full_name:
                      type: string
                    hospital_name:
                      type: string
                    patient_full_name:
                      type: string
                  required:
                  - id
                  - appointment_datetime
                  - status
                  - doctor_full_name
                  - hospital_name
                  - patient_full_name
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/hospitals":
    get:
      summary: List all hospitals
      tags:
      - Doctors and Hospitals
      responses:
        '200':
          description: successful
  "/api/v1/forgot":
    post:
      summary: Sends an email to reset the user's password
      tags:
      - Passwords
      parameters: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                user_type:
                  type: string
              required:
              - email
              - user_type
        description: The user's email address
  "/api/v1/password-reset":
    post:
      summary: Resets the user's password
      tags:
      - Passwords
      parameters:
      - name: token
        in: query
        description: The password reset token generated for the user
        required: true
        schema:
          type: string
      - name: user_type
        in: query
        description: The user's type
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
  "/api/v1/appointments":
    get:
      summary: List appointments
      tags:
        - Appointments
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: date
          in: query
          description: Date in format YYYY-MM-DD
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    patient:
                      type: object
                      properties:
                        id:
                          type: integer
                        first_name:
                          type: string
                        last_name:
                          type: string
                    doctor:
                      type: object
                      properties:
                        id:
                          type: integer
                        first_name:
                          type: string
                        last_name:
                          type: string
                    date:
                      type: string
                      format: date-time
                    notes:
                      type: string
                required:
                  - id
                  - patient
                  - doctor
                  - date
      description: List appointments for the given date (or all appointments if date is not specified)

    post:
      summary: Create an appointment
      tags:
        - Appointments
      security:
        - ApiKeyAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                patient_id:
                  type: integer
                doctor_id:
                  type: integer
                date:
                  type: string
                  format: date-time
              required:
                - patient_id
                - doctor_id
                - date
        description: Appointment details to create
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: The URL of the newly created appointment
              schema:
                type: string
        '400':
          description: Bad Request
        '404':
          description: Not Found
  "/api/v1/appointments/{id}":
    patch:
      summary: Update an appointment
      description: Update an existing appointment with the given ID.
      tags:
        - Appointments
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the appointment to update
          schema:
            type: integer
      requestBody:
        description: Appointment object to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentUpdate'
      responses:
        '200':
          description: Appointment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Bad request, invalid parameters
        '404':
          description: Appointment not found
        '500':
          description: Internal server error
    components:
      schemas:
        Appointment:
          type: object
          properties:
            id:
              type: integer
            patient_id:
              type: integer
            doctor_id:
              type: integer
            date:
              type: string
              format: date-time
          required:
            - id
            - patient_id
            - doctor_id
            - date
        AppointmentUpdate:
          type: object
          properties:
            date:
              type: string
              format: date-time
          required:
            - date
  "/api/v1/appointments/{appointment_id}/cancel":
    patch:
      summary: Cancel an appointment
      tags:
        - Appointments
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: appointment_id
          in: path
          description: ID of the appointment to cancel
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Appointment was cancelled successfully
        '404':
          description: Appointment with the specified ID was not found
        '409':
          description: Appointment is already cancelled
        '422':
          description: Unprocessable_entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
  "/api/v1/appointments/{id}/accept":
    patch:
      summary: Accept an appointment request
      tags:
        - Appointments
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - in: path
          name: id
          description: ID of the appointment
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully accepted appointment
        '401':
          description: Unauthorized
        '404':
          description: Appointment not found
        '422':
          description: Unprocessable_entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
  "/api/v1/appointments/upcoming":
    get:
      summary: Get upcoming appointments
      tags:
        - Appointments
      security:
        - ApiKeyAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    doctor_id:
                      type: integer
                    patient_id:
                      type: integer
                    date:
                      type: string
                      format: date-time
                    status:
                      type: string
                      enum:
                        - planed
                        - cancelled
                        - accepted
                        - completed
                  required:
                    - id
                    - doctor_id
                    - patient_id
                    - date
                    - status
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  "/api/v1/appointments/past":
    get:
      summary: Get past appointments
      tags:
        - Appointments
      security:
        - ApiKeyAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    doctor_id:
                      type: integer
                    patient_id:
                      type: integer
                    date:
                      type: string
                      format: date-time
                    status:
                      type: string
                      enum:
                        - planed
                        - cancelled
                        - accepted
                        - completed
                  required:
                    - id
                    - doctor_id
                    - patient_id
                    - date
                    - status
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  "/api/v1/conclusions":
    get:
      summary: List of all conclusions
      tags:
        - Conclusions
      security:
        - ApiKeyAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    patient_id:
                      type: integer
                    doctor_id:
                      type: integer
                    content:
                      type: string
                    created_at:
                      type: string
                  required:
                    - id
                    - patient_id
                    - doctor_id
                    - content
                    - created_at
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
        summary: Create a new conclusion
        tags:
          - Conclusions
        security:
          - ApiKeyAuth: [ ]
        parameters: [ ]
        responses:
          '201':
            description: Created
          '400':
            description: Bad Request
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Internal Server Error
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  patient_id:
                    type: integer
                    description: ID of the patient
                  doctor_id:
                    type: integer
                    description: ID of the doctor
                  text:
                    type: string
                    description: Text of the conclusion
                required:
                  - patient_id
                  - doctor_id
                  - text
          description: Parameters to create a new conclusion
  "/api/v1/conclusions/{id}":
      get:
        summary: Get a conclusion by ID
        tags:
          - Conclusions
        security:
          - ApiKeyAuth: [ ]
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
              format: int64
              example: 123
            description: The ID of the conclusion to get
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 123
                      description: The ID of the conclusion
                    patient_id:
                      type: integer
                      format: int64
                      example: 456
                      description: The ID of the patient
                    doctor_id:
                      type: integer
                      format: int64
                      example: 789
                      description: The ID of the doctor
                    diagnosis:
                      type: string
                      example: "Headache"
                      description: The diagnosis for the patient
                    notes:
                      type: string
                      example: "Patient needs rest and hydration"
                      description: Additional notes about the diagnosis
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: "Conclusion not found"
                      description: The error message
                  required:
                    - error
  "/api/v1/conclusions/{id}":
        put:
          summary: Update a conclusion
          tags:
            - Conclusions
          parameters:
            - in: path
              name: id
              required: true
              description: ID of the conclusion to update
              schema:
                type: integer
            - in: header
              name: Authorization
              description: Access token
              required: true
              schema:
                type: string
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    content:
                      type: string
                      description: Content of the conclusion
                  required:
                    - content
          responses:
            '200':
              description: OK
            '400':
              description: Bad request
            '401':
              description: Unauthorized
            '404':
              description: Conclusion not found

  "/api/v1/login":
    post:
      summary: create session
      tags:
      - Login
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                user_type:
                  type: string
              required:
              - email
              - password
              - user_type
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
- url: https://{staging_host}
  variables:
    staging_host:
      default: www.behealth.pp.ua
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header
      description: "{token}"
